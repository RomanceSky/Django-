根据菜鸟教程：post提交
视图中

def  salesStatisticsListView(request):
    dict = {}
    if request.POST:
       date_from = datetime.datetime.int(request.POST['Time1'])
       date_to = datetime.datetime.int(request.POST['Time2'])
       #开始筛选数据库
       #如：book_list = book.objects.filter(date__range=(date_from, date_to))
     
     http://blog.csdn.net/qiaojun_peng/article/details/17505109
     
     三、检索对象
>>> Blog.objects 
<django .db.models.manager.Manager object at ...> 
>>> b = Blog(name='Foo', tagline='Bar') 
>>> b.objects 
Traceback: 
    ... 
AttributeError: "Manager isn't accessible via Blog instances."
1、检索所有的对象
>>> all_entries = Entry.objects.all()
使用all()方法返回数据库中的所有对象。
2、检索特定的对象 
使用以下两个方法： 
fileter(**kwargs) 
返回一个与参数匹配的QuerySet,相当于等于(=). 
exclude(**kwargs) 
返回一个与参数不匹配的QuerySet,相当于不等于(!=)。

Entry.objects.filter (pub_date__year=2006) 
不使用Entry.objects.all().filter (pub_date__year=2006),虽然也能运行，all()最好再获取所有的对象时使用。 
上面的例子等同于的sql语句： 
slect * from entry where pub_date_year='2006'
链接过滤器： 
>>> Entry.objects.filter ( 
...     headline__startswith='What' 
... ).exclude( 
...     pub_date__gte=datetime.now() 
... ).filter ( 
...     pub_date__gte=datetime(2005, 1, 1) 
... )

最后返回的QuerySet是headline like 'What%' and put_date<now() and pub_date>2005-01-01
另外一种方法： 
>> q1 = Entry.objects.filter (headline__startswith="What") 
>> q2 = q1.exclude(pub_date__gte=datetime.now()) 
>> q3 = q1.filter (pub_date__gte=datetime.now()) 
这种方法的好处是可以对q1进行重用。

       
